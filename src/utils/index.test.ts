import Contract from "../models/contract/contract";
import {
    calcBlockSize,
    decodeStorageCid,
    extractMinerFromExtra,
    getContractsFromLogs,
    increaseHexByOne,
    mhDataToBuffer
} from "./index";
import {EthStorageCid} from "../types";

function dummyContract(address: string): Contract {
    return {
        contractId: 1,
        name: "abc",
        address,
        abi: [],
        states: [],
        startingBlock: 1,
        allAbis: [],
        events: [],
        methods: [],
    }
}

describe('utils', () => {
    test('getContractFromLogs: single contract', () => {
        const contracts: Contract[] = [
            dummyContract("0x1"),
            dummyContract("0x2"),
        ];
        const logs = ["0x2", "0x3", "0x4"];
        expect(getContractsFromLogs(contracts, logs)).not.toBeNull();
        expect(getContractsFromLogs(contracts, logs).length).toEqual(1);
        expect(getContractsFromLogs(contracts, logs)[0].address).toEqual("0x2");

    })
    test('getContractFromLogs: multiple contract', () => {
        const contracts: Contract[] = [
            dummyContract("0x1"),
            dummyContract("0x2"),
        ];
        const logs = ["0x1", "0x2", "0x3", "0x4"];
        expect(getContractsFromLogs(contracts, logs)).not.toBeNull();
        expect(getContractsFromLogs(contracts, logs).length).toEqual(2);
        expect(getContractsFromLogs(contracts, logs)[0].address).toEqual("0x1");
        expect(getContractsFromLogs(contracts, logs)[1].address).toEqual("0x2");
    })
    test('getContractFromLogs: lower case', () => {
        const contracts = [
            dummyContract("0x1AbC"),
            dummyContract("0x2ZeUq"),
        ];
        const logs = ["0x2zEUQ", "0x3", "0x4"];
        expect(getContractsFromLogs(contracts, logs).length).toEqual(1);
        expect(getContractsFromLogs(contracts, logs)[0].address).toEqual("0x2ZeUq");
    });

    test('increaseHexByOne: zero', () => {
        const a = "0x00";
        const b = "0x01";
        expect(increaseHexByOne(a)).toEqual(b);
    });
    test('increaseHexByOne: zero', () => {
        const a = "0x0000000000000000000000000000000000000000000000000000000000000000";
        const b = "0x0000000000000000000000000000000000000000000000000000000000000001";
        expect(increaseHexByOne(a)).toEqual(b);
    });
    test('increaseHexByOne: big int', () => {
        const a = "0x69b38749f0a8ed5d505c8474f7fb62c7828aad8a7627f1c67e07af1d2368cad4";
        const b = "0x69b38749f0a8ed5d505c8474f7fb62c7828aad8a7627f1c67e07af1d2368cad5";
        expect(increaseHexByOne(a)).toEqual(b);
    });

    test('mhDataToBuffer: empty', () => {
        const a = "";
        expect(mhDataToBuffer(a)).toEqual(new Buffer([]));
    });
    test('mhDataToBuffer: not empty', () => {
        const a = "\\xE2A0390DECD9548B62A8D60345";
        expect(mhDataToBuffer(a)).toEqual(Buffer.from([0xe2, 0xa0, 0x39, 0x0d, 0xec, 0xd9, 0x54, 0x8b, 0x62, 0xa8,
            0xd6, 0x03, 0x45]));
    });

    test('decodeStorageCid. short string', () => {
        const storage: EthStorageCid = {
            storageLeafKey: "",
            storagePath: "",
            mhKey: "",
            blockByMhKey: {
                key: "",
                data: "\\xf844a120290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a1a0616263313233000000000000000000000000000000000000000000000000000c"
            }
        };

        expect(decodeStorageCid(storage)).toEqual(Buffer.from([0x61, 0x62, 0x63, 0x31, 0x32, 0x33, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c]));
    });

    test('extractMinerFromExtra', () => {
        // block 8647996 on Rinkeby
        const blockRlp = "f9025ca00a84ebb80b8616551e251a42273bc0860e1db619affc009a7d17b96b8dba6cbaa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a0d7ce7224e063acb68e6dd5ba4e0ef90d4c6e61d4e30cdc6b6b5ef5adfc32a8c6a09db0cbfa54f72435c8f15326d01924bb0b9c1aa4ffa1b05eef9e4dbafc4179a1a0e9602d458a57dd10df00ac06b014da188c1bfb2276fd8b39cde58a82cf78169eb9010000020100400000100000400040008800000000100404008000000000004000000000820100000800210000400080200000010000800000000800000000a00240000000820000000800000008008000000000000800000401100000400000001430000000200000000000000010808000200090000000001520080010400000000100000100042000001840000100000080000040104088000000010000040000228000000000400040200000040000040000084000100020000000004000800000104002200000000000000000000047012080010000040040001000000000a00010000000000040000000020000120000000080000006008000100001000000018383f53c8398c5278324527d8460ad1423b861d883010a04846765746888676f312e31362e33856c696e7578000000000000009e5b0e7ed267a159861a0c8a5b982adb1c3d4cfd12cd85eed6389e113ba614e23350342cd4cfeb8ea0d34bcaacadfa1a108be9c204ea5c95642fb8c03b6493df01a00000000000000000000000000000000000000000000000000000000000000000880000000000000000";
        const miner = "0x7ffc57839b00206d1ad20c69a1981b489f772031";

        expect(extractMinerFromExtra(blockRlp)).toEqual(miner);
    });

    test('calcBlockSize', () => {
        // rinkeby block number 8845403
        const headerRLP = "f9025ca0b692e2793def19b04afad0127c1c1bde8252cad9dc795733bc2312ec1cd4cab0a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a02ea92364346e4d0a940b797216a793ab0a83443f81d801842f824e048645e15fa0b8812a2476a022b92bbb1c83caed3ead66a0bf29293ba755021551168f29bc37a0b551dc00de4200c9e6fd323f84f27000ad65ba402d2f9d9d72911478a555f47cb901000424000000000140000010408400000000080420c000102000802400000000000000000200002000000000002010201000000010800000200000000001302208040000004000000800000008020100200400008004400008100001008000000450000000020000100000001400003c0100004000000000040000001060000004010000000000000000400000008000000040008100408088000401f000000000020800040000440000000100008020080000000004120000000001000000000400000002200400000108080044000000000020800088001003000010000024002010200000000000002080000000020002002080008020508004080800000002028386f85b83989680830ca40e8460da470eb861d883010a04846765746888676f312e31362e34856c696e7578000000000000000b60464a2dc97ce1ca3b3778ad9076a5ebbfb54879ae627f90f397138f954b956a98be5ba63c9f669939be8ebe4a3f3dfcdf5395864c8be649513cbb2dbabc5b00a00000000000000000000000000000000000000000000000000000000000000000880000000000000000";
        const txsRLP = [
            "f9015282166b843b9aca008398968094c097ddcfeb455116129084572f8ed031b88707ec8707ca60343a08d2b8e47ff36ab5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000ddf02b7192d50b12a05e74c628701322ba8e92a0000000000000000000000000000000000000000000000000000000060da52f50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c778417e063141139fce010982780140aa0cd5ab00000000000000000000000021f8c856ee06de1ffe73eec1095258cfc7c6b06e2ba0b0b7f5a0af611159affb38534bc33ad6ad29a68bfa60ed4d04cb29b0055a3e4fa07a23444185f42f51f97a40c6a345292c08ad1a8376cf5f8ff0b16b852232a302",
            "f88b830cd6c5843b9aca00833d090094445a4d631efa43215029ca69a4a6d236fe4f835c80a451cff8d9000000000000000000000000ed15326aa99b4c096833267d1bafda464e7cfffe2ca0be48979a0977e38d5e5a642f372ff24304d97fbc65473bab16b2685c5793a137a03f8f4761edfcf8c49c1f4fbbb986cc59ccb0c8f868d04f5661a15a09236cfbf9",
            "f88b830cd6c6843b9aca00833d090094445a4d631efa43215029ca69a4a6d236fe4f835c80a451cff8d9000000000000000000000000efe8234dbf3ff8f38024be5ae0aa9b4291942c012ca023257b83dd53e7275c4774b390fa6a175390c39714136fead665320812186085a07bfca303a06aa958ee73f90b6c22cc6eadf5af6301da5174b2e6def58d71b02f",
            "f8a958843b9aca008303553c946a5cf00ffa40add2758543820b10fae87a0505b580b844c1917ff00000000000000000000000000000000000000000000000000000000000084c56000000000000000000000000000000000000000000000000000000033c3178172ba0c247cfe7dd3ac45967255549d561368ecd6792d3fcbf7932ef1617aac03b6fd5a06d206396f17d5698eb26b02c67a5d5562b85728e6fcf8ee5800fefa652f045df",
            "f88731843b9aca0082b4fe947d93a9807d27be1fb37df67cc9710faf4e4f77d780a40933e3a7000000000000000000000000716983540e3742ca01958e01e0d139dbef959f622ca0eab06e1848313f42b2c926b91a0b2ad09bc80fef2206c0c60f991415ff28547aa049675c1fa050b11857a8dd89a898f111bb479761bb5c1f5a5dfc5a67cdff26b9",
            "f9010950843b9aca0083035397940dc666f5f2f6ce4b6f8c35964d6fe01e26b7458480b8a48201aa3f00000000000000000000000017f137e7f95ad6759ac2b8d3017bb3b43e2705d50000000000000000000000000000000000000000000004f551ed831b8f890b81000000000000000000000000c953f7ede9cecf19ab6ccf627de420879e62067400000000000000000000000000000000000000000000041b5b25aa2acbe07c8000000000000000000000000000000000000000000000000010c1b993db4ec1fc2ca0db6834b255e1b2d104a493c38ae2b88aebcf8ccfbdd94340c679b2741ff33e6ea029e5cc619452624110e9a0e52e4cc649edf2d3f6edd645038f10f75ec95e4100",
            "f8887f843b9aca00830156a394f3b970d29f47afb05bf3457335c74a56d7fa233880a4379607f500000000000000000000000000000000000000000000000000000000000000022ca0604ec58d82e6286ee7eeab189332c7e02ae5d80be51f68b5eaf90c696f40a114a01c200e4a6e961a2168d241dbd3048980712cf5e7293d8d0e24aa364ef6b2ec40",
            "f8a94a843b9aca008303572d946a5cf00ffa40add2758543820b10fae87a0505b580b844fc3e5295000000000000000000000000000000000000000000000478757f2ea402870b39000000000000000000000000000000000000000000000000000000000006f5ea2ca0e2a35419448fe0190cd0be2da279c7385e014069a40376d62e058c9f33b03e87a0108ada5271c6ec2a5d85dfdf05ac96a43c720a0ce8a9746c5464a73c81d80404",
            "f8a819843b9aca008267d9944dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b80b844095ea7b30000000000000000000000006311b43820fa32d59c70b9eab3202635c455bdd2ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2ba00940e76dd9e9b5c179c5d8ca2bd025c64e1f6e2346752d14037b254b7299a167a0553a4899be7af83aace26c8275327eae21725c6e2944a5098996f13c0f10bc56",
            "f9012908843b9aca0083019566948055a2c0f7eb177beab357b70e6504402d2b5ff680b8c4f242432a000000000000000000000000de920b90b751190e28814af5d991aec80c5bc871000000000000000000000000be786f9e9f09372a8f2e4dae685166f3be2611e8de920b90b751190e28814af5d991aec80c5bc871000000000000000001000800000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000002ca024f0a32fc39d2450455224e9715b9ed7249f8553089a0f2f28b342e94690a687a0685172bdc045c6e18b32a680ba2dd51eaba74b045dc1f01ee841b40b63e10eb2",
        ];

        expect(calcBlockSize(headerRLP, txsRLP, [])).toEqual(2592);
    });
});
